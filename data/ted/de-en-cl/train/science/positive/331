über die definition von leben wird heftig debattiert .
schließt sie die fortpflanzung mit ein , oder den stoffwechsel , oder evolution ?
ich weiß die antwort darauf nicht , also sage ich es euch nicht .
aber ich sage , dass leben auch berechnung umfasst .
das ist also ein computerprogramm .
_UNK_ in einer zelle , würde das programm ausgeführt und es könnte zu dieser person führen , oder mit einer kleinen änderung zu dieser , oder mit einer anderen kleinen änderung zu dieser , oder mit einer größeren änderung zu diesem hund , oder diesem baum , oder dem wal hier .
wenn wir diese metapher eines genoms als programm nun ernst nehmen , dann müssen sie bedenken , dass chris anderson ein computer - erzeugter gegenstand ist , wie auch jim watson , craig venter , und alle von uns .
und indem wir uns von der wahrheit dieser metapher überzeugen , gibt es viele ähnlichkeiten zwischen genetischen und computer - programmen , die helfen , uns zu überzeugen .
die für mich faszinierendste ist die seltsame sensibilität gegenüber kleinen veränderungen , die zu großen veränderungen in der biologischen entwicklung führen -- im output .
eine kleine mutation kann aus einer _UNK_ fliege eine _UNK_ machen .
oder sie könnte einer fliege statt _UNK_ beine anbauen .
oder , falls sie " die braut des prinzen " kennen , einen _UNK_ mann schaffen .
ein kennzeichen von _UNK_ ist genau diese sensibilität für kleine veränderungen .
wenn sie einen dollar auf dem konto haben und nur ein einziges bit verändern , könnten sie am ende tausend dollar haben .
diese kleinen änderungen sind dinge , die -- denke ich , darauf hindeuten , dass eine komplizierte berechnung unter diesen verstärkten , großen veränderungen geschieht .
nun deutet also alles darauf hin , dass molekulare programme der biologie _UNK_ und die biologie zeigt die macht molekularer programme .
ich möchte gerne diese programme schreiben , um eventuell technologie damit zu bauen .
und davon gibt es eine menge leute , eine menge synthetischer biologen tun das , wie craig venter .
sie konzentrieren sich auf die verwendung von zellen .
sie sind zellen - orientiert .
meine freunde , molekulare programmierer , und ich haben eine art _UNK_ herangehensweise .
wir wollen dna , rna und proteine verwenden , und neue sprachen konstruieren , um dinge von grund auf zu schaffen , indem wir _UNK_ verwenden , was möglicherweise nichts mit biologie zu tun hat .
das hier sind also alle maschinen in einer zelle .
dort ist eine kamera .
hier sind die solarzellen der zelle , ein paar schalter , die gene ein - und ausschalten , die träger der zelle , motoren , die muskeln bewegen .
meine kleine gruppe molekularer programmierer versucht , all diese teile aus dna nachzubauen .
wir sind keine dna - fanatiker , aber dna ist das material , das am billigsten , am _UNK_ und am leichtesten programmierbar ist .
und sobald andere dinge leichter zu verwenden sind -- vielleicht protein -- dann arbeiten wir mit denen .
wenn es uns gelingt , wie wird molekulares programmieren aussehen ?
man sitzt vorm computer .
man entwirft so etwas wie ein handy , und in sehr abstrakter sprache beschreibt man dieses handy .
dann nimmt man einen _UNK_ , das diese beschreibung nimmt und sie in tatsächliche moleküle umwandelt , die zu einem synthesizer gesendet werden können , und dieser synthesizer verpackt diese moleküle in einen samen .
und wenn man diesen samen gießt und mit nährstoffen versorgt , dann liefert er uns eine _UNK_ , eine molekulare berechnung , und baut einen elektronischen computer .
und falls meine überzeugung noch nicht _UNK_ sind , ich glaube , dass es im leben um molekulare computer geht , die elektrochemische computer bauen , die elektronische computer bauen , die zusammen mit elektrochemischen computern neue molekulare computer bauen werden , die neue elektronische computer bauen können , usw .
und wenn sie mir das alles _UNK_ , und auch denken , dass leben berechnung ist , so wie ich , dann schauen sie sich die großen fragen aus sicht eines _UNK_ an .
eine große frage ist also : woher weiß ein baby , wann es zu wachsen aufhören soll ?
und was molekulares programmieren betrifft : woher weiß denn das handy , wann es zu wachsen aufhören soll ?
oder wie weiß ein computerprogramm , wann es anhalten soll ?
genauer gesagt , woher weiß man , ob ein programm je aufhört ?
es gibt noch andere solcher fragen .
eine von ihnen ist craig venters frage .
ich glaube ja , er ist eigentlich ein informatiker .
er fragt , wie groß ist das kleinste genom , das mir einen funktionierenden mikroorganismus geben kann ?
wie wenige gene kann ich verwenden ?
das ist genau analog zu der frage , was das kleinste programm ist , das ich schreiben kann , das sich genau so wie microsoft word verhält ?
und so wie er kleinere bakterien programmiert , wie er genome programmiert , die funktionieren werden , so können wir kleinere programme schreiben , die das tun , was microsoft word macht .
aber bei molekularen programmen ist unsere frage : wie viele moleküle müssen wir in diesen samen tun , um ein handy zu erhalten ?
wie weit können wir die zahl reduzieren ?
das sind große fragen in der informatik .
das sind alles fragen der komplexität , und laut informatik sind diese fragen sehr schwierig .
fast -- viele von ihnen sind unmöglich .
aber in einigen fällen können wir schon antworten äußern .
ich werde also diese fragen stellen für die dna - strukturen , über die ich als nächstes rede .
das hier ist normale dna , was man für normale dna hält .
sie hat zwei stränge , sie ist eine doppelhelix , und die as , ts , cs und gs halten durch ihre verbindung die stränge zusammen .
ich werde es manchmal so aufzeichnen , nur , damit ich sie nicht erschrecke .
wir wollen uns einzelne stränge ansehen , nicht die doppelhelix .
wenn wir sie synthetisieren , hat sie nur einen strang . wir können also den blauen strang in einem röhrchen haben und einen orangefarbenen im anderen röhrchen , und wenn sie nur einen strang hat , ist sie _UNK_ .
wenn man sie vermischt , ergeben sie eine feste doppelhelix .
in den letzten 25 jahren arbeiteten _UNK_ _UNK_ und ein paar seiner nachfolger hart daran , wunderschöne dreidimensionale strukturen zu erstellen , indem diese reaktion der dna - stränge ausgenutzt wird .
viele ihrer ansätze sind zwar elegant , dauern aber lange .
sie können ein paar jahre dauern , oder sind schwierig zu entwerfen .
also dachte ich mir vor ein paar jahren eine neue methode aus , die ich dna - origami nenne , und die so einfach ist , dass man sie selbst zuhause in der küche verrichten kann und das zeug auf dem laptop entwerfen .
aber um das zu tun , wird ein einzelner , langer dna - strang benötigt . theoretisch kommt man da nur schwer ran .
also kann man sich einer natürlichen quelle bedienen .
sie können in dieses computer - generierte produkt hineinsehen , und es hat ein doppelt gewundenes genom -- das nützt uns nichts .
man kann in seinen darm schauen . es gibt milliarden bakterien .
die nützen uns auch nichts .
wieder doppelt _UNK_ , aber sie sind mit einem virus infiziert , der ein schönes , langes , einzeln gewundenes genom hat , das wir wie ein stück papier falten können .
und das machen wir so .
das ist teil dieses genoms .
wir geben noch etwas kurze , synthetische dna dazu , die ich krampen nenne .
jede einzelne hat eine linke hälfte , die den langen strang festhält , und eine rechte hälfte , die ihn an einer anderen stelle festhält , und so wird der lange strang so zusammengefügt .
unterm strich falten sich so viele von ihnen auf diesem strang in so etwas wie ein rechteck .
davon können wir kein video aufnehmen , aber shawn douglas aus harvard hat uns das schön visualisiert . hier haben wir einen langen strang mit ein paar kurzen dran .
und dann mischen wir diese stränge zusammen .
wir erhitzen sie , fügen etwas salz hinzu , erhitzen sie fast bis zum siedepunkt und kühlen sie ab , und während des _UNK_ fixieren die kurzen stränge die langen und es bildet sich eine struktur heraus .
und sie können sehen , wie sich hier eine doppelhelix formt .
wenn sie sich dna - origami anschauen , können sie erkennen , dass sie , obwohl es zunächst kompliziert scheint , nur ein haufen _UNK_ ist , die parallel liegen , und sie werden dort zusammengehalten , wo kurze stränge an einer helix entlang verlaufen und dann zu einer anderen springen .
es gibt also einen strang , der so verläuft , entlang der helix , sich fixiert -- dann springt er zu einer anderen helix und kommt zurück .
das fixiert den langen strang so .
um nun zu zeigen , dass wir beliebige formen und muster , die wir wollten , erzeugen können , versuchte ich mich an so einer form .
ich wollte dna zu etwas falten , das über dem auge hoch geht , an der nase runter , die nase hoch , um die stirn , wieder runter und dann in so einem kringel endet .
und , so dachte ich , wenn das funktioniert , geht alles .
also sollte das computerprogramm die krampen dafür entwerfen .
ich bestellte sie , sie kamen mit fedex .
ich vermischte sie , erhitzte sie und ließ sie abkühlen , und bekam 50 milliarden _UNK_ gesichter , die in einem einzelnen wassertropfen herumschwimmen .
und jedes von ihnen ist einfach ein tausendstel so breit wie ein menschliches haar , okay ?
sie schweben da also alle in der lösung herum . um sie zu sehen , müssen wir sie auf eine klebrige oberfläche bekommen .
also kippen wir sie auf eine oberfläche und sie kleben daran fest , und dann machen wir ein bild mittels _UNK_ .
es gibt eine nadel , wie bei einem plattenspieler , die sich auf der oberfläche hin - und _UNK_ , rauf und runter , und die höhe der ersten oberfläche _UNK_ .
sie fühlt das dna - origami .
hier ist das rasterkraftmikroskop an der arbeit , und man sieht , dass die landung etwas hart ist .
beim reinzoomen sehen wir schwache kiefer , die über ihre köpfe klappen , und einige ihrer nasen wurden eingeschlagen , aber sonst ganz gut .
man kann sich reinzoomen und sogar den kleinen kringel sehen , diesen kleinen nano - _UNK_ .
und das tolle daran ist , dass es jeder tun kann .
und ungefähr ein jahr später bekam ich überraschenderweise dies in der post .
weiß jemand , was das ist ? was ist es ?
es ist china , nicht wahr ?
folgendes war passiert : eine studentin in china , _UNK_ _UNK_ , legte saubere arbeit hin .
sie schrieb ihre ganz eigene software , um dieses dna - origami zu entwerfen und zu bauen , eine wunderbare darstellung von china , sogar mit taiwan , und es hängt im prinzip an der kürzesten leine der welt , nicht ?
das funktioniert also echt gut und man kann muster sowie auch formen bauen , okay ?
und man kann eine karte von amerika erstellen und dna mit dna buchstabieren .
und hier ist was tolles ... also das sieht alles ein bisschen nach nano - kunst aus , aber diese nano - kunst stellt sich als grundlage für das erstellen von nano - schaltkreisen heraus .
also kann man _UNK_ auf die krampen setzen , wie eine glühbirne und einen schalter .
dann wartet man , bis es fertig ist , und bekommt eine art schaltkreis .
und dann kann man vielleicht die dna _UNK_ und hat nur den schaltkreis .
das haben also kollegen von mir am caltech getan .
sie nahmen ein dna - origami , organisierten ein paar nano - röhrchen aus kohlefasern und schlossen hier einen schalter an , testeten es und bewiesen , dass es wirklich ein schalter ist .
das ist nur ein einzelner schalter . für einen computer braucht man eine halbe milliarde , es ist also noch ein weiter weg .
aber es sieht sehr vielversprechend aus , denn das origami kann teile von einem zehntel der größe von denen in einem normalen computer bauen .
das sieht also sehr gut aus für den bau kleiner computer .
kehren wir jetzt zu dem compiler zurück .
das dna - origami ist ein beweis , dass der compiler funktioniert .
man beginnt also mit etwas im computer .
man bekommt eine abstrakte beschreibung des programms , eine abstrakte beschreibung des _UNK_ .
man kann es zu molekülen zusammensetzen und dann an einen synthesizer schicken , und es funktioniert wirklich .
und jetzt hat eine firma sogar ein nettes programm gemacht . es ist viel besser als mein code , der war etwas hässlich , und so können wir das auf eine schöne , visuelle und _UNK_ art entwerfen .
natürlich könnte man jetzt sagen , wieso ist denn dna - origami nicht das ende der geschichte ?
hier haben wir den molekularen compiler , damit können wir tun , was wir wollen .
man kann es aber nicht skalieren .
wenn man also aus dna - origami einen menschen bauen will , braucht man einen langen strang , der 10 billionen billionen basen lang ist .
das sind drei lichtjahre dna , daraus wird also nichts .
und so wenden wir uns einer anderen technologie zu , die wir algorithmische selbstassemblierung der bausteine nennen .
sie wurde von erik _UNK_ initiiert , und diese methode kann bausteine von einem hundertstel der größe eines dna - origami verarbeiten .
man zoomt rein , es gibt nur vier dna - stränge , und auf ihnen sitzen einzelne _UNK_ , die sich an andere bausteine heften können , wenn sie passen .
und diese bausteine stellen wir gern als kleine quadrate dar .
wenn man sich ihre klebrigen enden ansieht , diese dna - stückchen , dann sieht man , dass sie ein _UNK_ bilden .
also wird aus ihnen ein kompliziertes , sich selbst _UNK_ schachbrett .
und der springende punkt daran ist , falls das jemand verpasst hat , dass die bausteine eine art molekulares programm sind , die muster ausgeben können .
und ein faszinierender aspekt daran ist , dass ein jedes computerprogramm in eines dieser _UNK_ übersetzt werden kann , besonders zähler .
man kann also einen satz bausteine vorbereiten , die bei ihrer verbindung einen kleinen binären zähler formen , und kein schachbrett .
man kann die _UNK_ fünf , sechs und sieben ablesen .
und um diese berechnungen auf den richtigen weg zu bringen , braucht man eine art input , einen samen sozusagen .
dafür kann man dna - origami verwenden .
man kann die zahl 32 auf die rechte seite eines dna - origami kodieren , und wenn man diese _UNK_ bausteine hinzufügt , dann beginnen sie zu zählen -- sie erkennen die 32 und hören bei 32 auf .
wir haben also eine methode gefunden , ein molekulares programm zum _UNK_ aufhören zu bringen .
es weiß , wann es nicht mehr weiterwachsen soll , weil es zählen kann .
es weiß , wie groß es ist .
das beantwortet also die erste frage , die ich vorhin erwähnte .
es sagt uns aber nicht , wie babies das hinkriegen .
jetzt können wir versuchen , mit diesem zählen größere dinge zu erreichen , die dna - origami normalerweise nicht kann .
hier ist das dna - origami , und wir können eins tun , wir schreiben 32 auf beide seiten des dna - origami , und können nun unsere _UNK_ verwenden und mit bausteinen gießen , und daraus wachsen dann bausteine und formen ein quadrat .
der zähler dient als vorlage , der einen baustein in der mitte ausfüllen soll .
uns ist es also gelungen , etwas viel größeres als dna - origami zu erschaffen , indem wir dna - origami und bausteine verbunden haben .
und das tolle daran ist , man kann es umprogrammieren .
man kann einfach ein paar dna - stränge in der binären darstellung ändern und bekommt 96 anstatt 32 .
und wenn man das tut , hat das origami dieselbe größe , aber unser quadrat ist am ende dreimal so groß .
das fasst also zusammen , was ich vorhin über entwicklung erzählte .
wir haben ein sehr sensibles computerprogramm , wo kleine änderungen -- winzige , einzelne mutationen -- etwas nehmen , das ein quadrat einer größe schuf , und daraus etwas viel größeres machen .
und das -- die verwendung von _UNK_ zur berechnung und zum bau dieser dinge durch diese art entwicklungsprozess ist etwas , das sich auch auf craig venters frage auswirkt .
also kann man fragen : " wie viele dna - stränge braucht man , um ein quadrat einer bestimmten größe zu bauen ? "
wenn wir ein quadrat der größe 10 , 100 oder 1.000 machen wollten , wenn wir nur dna - origami dazu verwendeten , dann entspräche die benötigte anzahl der dna - stränge der größe des quadrats im quadrat : wir brauchten also 100 , 10.000 oder eine million dna - stränge .
das können wir uns nicht so recht leisten .
aber wenn wir unsere berechnungen nehmen -- wir nehmen origami , und ein paar _UNK_ bausteine -- dann geht das auch mit 100 , 200 oder 300 dna - strängen .
und so können wir die zahl der verwendeten dna - stränge mit nur ein bisschen zählen und berechnung exponentiell verringern .
berechnung ist also eine sehr effektive art , die anzahl der zum bau benötigten moleküle zu reduzieren und die größe des zu _UNK_ genoms zu reduzieren .
und schließlich komme ich zu der verrückten idee zurück , dass computer computer bauen .
schauen sie sich das quadrat an , das wir mit dem origami gebaut haben , und die zähler , die aus ihm wachsen , sein muster ist exakt das muster , das wir brauchen , um einen speicher zu erschaffen .
befestigen wir also ein paar drähte und schalter an den bausteinen -- wir heften sie also nicht an die stränge , sondern an die bausteine -- dann bauen sie die komplizierteren schaltkreise selbst zusammen , die _UNK_ - schaltkreise , die wir für diesen speicher brauchen .
also können wir einen komplizierten schaltkreis schaffen , indem wir nur ein bisschen berechnung verwenden .
es ist ein molekularer computer , der einen elektronischen baut .
und jetzt fragt ihr : " wie weit sind wir auf dieser straße ? "
experimentell haben wir das im vergangenen jahr getan .
hier ist ein rechteck aus dna - origami , und hier wachsen ein paar bausteine daraus .
und man kann sehen , wie sie zählen .
eins , zwei , drei , vier , fünf , sechs , neun , zehn , elf , zwölf , siebzehn .
da sind ein paar fehler drin , aber wenigstens zählt es in eine richtung .
diese idee hatten wir vor neun jahren , und das ist die ungefähre _UNK_ , die wir zum erreichen dieser dinge benötigen . ich würde sagen , wir haben viel geschafft .
wir haben ein paar ideen , wie wir diese fehler lösen ,
und ich glaube , dass wir in den nächsten 5 bis 10 jahren die quadrate herstellen können , die ich beschrieben habe , und vielleicht sogar ein paar der _UNK_ schaltkreise .
was möchte ich euch allen aus diesem vortrag mitgeben ?
ich möchte , dass ihr euch bewusst seid , dass das leben , um seine sehr diversen und komplexen formen zu erschaffen , berechnung verwendet .
und die verwendeten berechnungen sind molekular , und um das zu verstehen und es besser in den griff zu bekommen , wie feynman sagte , müssen wir etwas bauen , um es zu verstehen .
also werden wir moleküle nehmen und das alles umbauen , es von grund auf zu erbauen , indem wir dna so verwenden , wie die natur es nie beabsichtigte , indem wir dna - origami verwenden , und das soll diese algorithmische selbstassemblierung begründen .
und das ist alles schon ziemlich cool , aber was ihr aus diesem vortrag mitnehmen solltet , vielleicht aus einer dieser großen fragen , ist dass sich die molekulare programmierung nicht ums erschaffen von spielereien dreht .
es geht nicht nur um -- es geht nicht um _UNK_ handys und schaltkreise .
es geht aber darum , mithilfe der informatik große fragen in einem neuen licht zu betrachten , neue versionen dieser großen fragen zu stellen und zu verstehen , wie die biologie solche faszinierenden dinge schaffen kann . danke .
