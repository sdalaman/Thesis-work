the	idea	behind	the	stuxnet	computer	worm	is	actually	quite	simple	.
we	do	n't	want	iran	to	get	the	bomb	.
their	major	asset	for	developing	nuclear	weapons	is	the	natanz	uranium	enrichment	facility	.
the	gray	boxes	that	you	see	,	these	are	real	-	time	control	systems	.
now	if	we	manage	to	compromise	these	systems	that	control	drive	speeds	and	valves	,	we	can	actually	cause	a	lot	of	problems	with	the	centrifuge	.
the	gray	boxes	do	n't	run	windows	software	;	they	are	a	completely	different	technology	.
but	if	we	manage	to	place	a	good	windows	virus	on	a	notebook	that	is	used	by	a	maintenance	engineer	to	configure	this	gray	box	,	then	we	are	in	business	.
and	this	is	the	plot	behind	stuxnet	.
so	we	start	with	a	windows	dropper	.
the	payload	goes	onto	the	gray	box	,	damages	the	centrifuge	,	and	the	iranian	nuclear	program	is	delayed	--	mission	accomplished	.
that	's	easy	,	huh	?
i	want	to	tell	you	how	we	found	that	out	.
when	we	started	our	research	on	stuxnet	six	months	ago	,	it	was	completely	unknown	what	the	purpose	of	this	thing	was	.
the	only	thing	that	was	known	is	it	's	very	,	very	complex	on	the	windows	part	,	the	dropper	part	,	used	multiple	zero	-	day	vulnerabilities	.
and	it	seemed	to	want	to	do	something	with	these	gray	boxes	,	these	real	-	time	control	systems	.
so	that	got	our	attention	,	and	we	started	a	lab	project	where	we	infected	our	environment	with	stuxnet	and	checked	this	thing	out	.
and	then	some	very	funny	things	happened	.
stuxnet	behaved	like	a	lab	rat	that	did	n't	like	our	cheese	--	_UNK_	,	but	did	n't	want	to	eat	.
did	n't	make	sense	to	me	.
and	after	we	experimented	with	different	flavors	of	cheese	,	i	realized	,	well	,	this	is	a	directed	attack	.
it	's	completely	directed	.
the	dropper	is	_UNK_	actively	on	the	gray	box	if	a	specific	configuration	is	found	,	and	even	if	the	actual	program	code	that	it	's	trying	to	infect	is	actually	running	on	that	target	.
and	if	not	,	stuxnet	does	nothing	.
so	that	really	got	my	attention	,	and	we	started	to	work	on	this	nearly	around	the	clock	,	because	i	thought	,	``	well	,	we	do	n't	know	what	the	target	is	.
it	could	be	,	let	's	say	for	example	,	a	u.s.	power	plant	,	or	a	chemical	plant	in	germany	.
so	we	better	find	out	what	the	target	is	soon	.	``
so	we	extracted	and	_UNK_	the	attack	code	,	and	we	discovered	that	it	's	structured	in	two	digital	bombs	--	a	smaller	one	and	a	bigger	one	.
and	we	also	saw	that	they	are	very	professionally	engineered	by	people	who	obviously	had	all	insider	information	.
they	knew	all	the	bits	and	bites	that	they	had	to	attack	.
they	probably	even	know	the	shoe	size	of	the	operator	.
so	they	know	everything	.
and	if	you	have	heard	that	the	dropper	of	stuxnet	is	complex	and	high	-	tech	,	let	me	tell	you	this	:	the	payload	is	rocket	science	.
it	's	way	above	everything	that	we	have	ever	seen	before	.
here	you	see	a	sample	of	this	actual	attack	code	.
we	are	talking	about	--	around	about	15,000	lines	of	code	.
looks	pretty	much	like	old	-	style	assembly	language	.
and	i	want	to	tell	you	how	we	were	able	to	make	sense	out	of	this	code	.
so	what	we	were	looking	for	is	,	first	of	all	,	system	function	calls	,	because	we	know	what	they	do	.
and	then	we	were	looking	for	timers	and	data	structures	and	trying	to	relate	them	to	the	real	world	--	to	potential	real	world	targets	.
so	we	do	need	target	theories	that	we	can	prove	or	disprove	.
in	order	to	get	target	theories	,	we	remember	that	it	's	definitely	hardcore	sabotage	,	it	must	be	a	high	-	value	target	and	it	is	most	likely	located	in	iran	,	because	that	's	where	most	of	the	infections	had	been	reported	.
now	you	do	n't	find	several	thousand	targets	in	that	area	.
it	basically	boils	down	to	the	_UNK_	nuclear	power	plant	and	to	the	natanz	fuel	enrichment	plant	.
so	i	told	my	assistant	,	``	get	me	a	list	of	all	centrifuge	and	power	plant	experts	from	our	client	base	.	``
and	i	phoned	them	up	and	picked	their	brain	in	an	effort	to	match	their	expertise	with	what	we	found	in	code	and	data	.
and	that	worked	pretty	well	.
so	we	were	able	to	associate	the	small	digital	warhead	with	the	rotor	control	.
the	rotor	is	that	moving	part	within	the	centrifuge	,	that	black	object	that	you	see	.
and	if	you	manipulate	the	speed	of	this	rotor	,	you	are	actually	able	to	crack	the	rotor	and	eventually	even	have	the	centrifuge	explode	.
what	we	also	saw	is	that	the	goal	of	the	attack	was	really	to	do	it	slowly	and	creepy	--	obviously	in	an	effort	to	drive	maintenance	engineers	crazy	,	that	they	would	not	be	able	to	figure	this	out	quickly	.
the	big	digital	warhead	--	we	had	a	shot	at	this	by	looking	very	closely	at	data	and	data	structures	.
so	for	example	,	the	number	164	really	stands	out	in	that	code	;	you	ca	n't	overlook	it	.
i	started	to	research	scientific	literature	on	how	these	centrifuges	are	actually	built	in	natanz	and	found	they	are	structured	in	what	is	called	a	cascade	,	and	each	cascade	holds	164	centrifuges	.
so	that	made	sense	,	that	was	a	match	.
and	it	even	got	better	.
these	centrifuges	in	iran	are	subdivided	into	15	,	what	is	called	,	stages	.	and	guess	what	we	found	in	the	attack	code	?
an	almost	identical	structure	.
so	again	,	that	was	a	real	good	match	.
and	this	gave	us	very	high	confidence	for	what	we	were	looking	at	.
now	do	n't	get	me	wrong	here	,	it	did	n't	go	like	this	.
these	results	have	been	obtained	over	several	weeks	of	really	hard	labor	.
and	we	often	went	into	just	a	dead	end	and	had	to	recover	.
anyway	,	so	we	figured	out	that	both	digital	warheads	were	actually	aiming	at	one	and	the	same	target	,	but	from	different	angles	.
the	small	warhead	is	taking	one	cascade	,	and	spinning	up	the	rotors	and	slowing	them	down	,	and	the	big	warhead	is	talking	to	six	cascades	and	manipulating	valves	.
so	in	all	,	we	are	very	confident	that	we	have	actually	determined	what	the	target	is	.
it	is	natanz	,	and	it	is	only	natanz	.
so	we	do	n't	have	to	worry	that	other	targets	might	be	hit	by	stuxnet	.
here	's	some	very	cool	stuff	that	we	saw	--	really	knocked	my	socks	off	.
down	there	is	the	gray	box	,	and	on	the	top	you	see	the	centrifuges	.
now	what	this	thing	does	is	it	intercepts	the	input	values	from	sensors	--	so	for	example	,	from	pressure	sensors	and	vibration	sensors	--	and	it	provides	legitimate	program	code	,	which	is	still	running	during	the	attack	,	with	fake	input	data	.
and	as	a	matter	of	fact	,	this	fake	input	data	is	actually	prerecorded	by	stuxnet	.
so	it	's	just	like	from	the	hollywood	movies	where	during	the	heist	,	the	observation	camera	is	fed	with	prerecorded	video	.
that	's	cool	,	huh	?
the	idea	here	is	obviously	not	only	to	fool	the	operators	in	the	control	room	.	it	actually	is	much	more	dangerous	and	aggressive	.
the	idea	is	to	circumvent	a	digital	safety	system	.
we	need	digital	safety	systems	where	a	human	operator	could	not	act	quick	enough	.
so	for	example	,	in	a	power	plant	,	when	your	big	steam	turbine	gets	too	over	speed	,	you	must	open	relief	valves	within	a	millisecond	.
obviously	,	this	can	not	be	done	by	a	human	operator	.
so	this	is	where	we	need	digital	safety	systems	.
and	when	they	are	compromised	,	then	real	bad	things	can	happen	.
your	plant	can	blow	up	.
and	neither	your	operators	nor	your	safety	system	will	notice	it	.
that	's	scary	.
but	it	gets	worse	.
and	this	is	very	important	,	what	i	'm	going	to	say	.	think	about	this	:
this	attack	is	generic	.
it	does	n't	have	anything	to	do	,	in	specifics	,	with	centrifuges	,	with	uranium	enrichment	.
so	it	would	work	as	well	,	for	example	,	in	a	power	plant	or	in	an	automobile	factory	.
it	is	generic	.
and	you	do	n't	have	--	as	an	attacker	--	you	do	n't	have	to	deliver	this	payload	by	a	usb	stick	,	as	we	saw	it	in	the	case	of	stuxnet	.
you	could	also	use	conventional	worm	technology	for	spreading	.
just	spread	it	as	wide	as	possible	.
and	if	you	do	that	,	what	you	end	up	with	is	a	cyber	weapon	of	mass	destruction	.
that	's	the	consequence	that	we	have	to	face	.
so	unfortunately	,	the	biggest	number	of	targets	for	such	attacks	are	not	in	the	middle	east	.
they	're	in	the	united	states	and	europe	and	in	japan	.
so	all	of	the	green	areas	,	these	are	your	target	-	rich	environments	.
we	have	to	face	the	consequences	,	and	we	better	start	to	prepare	right	now	.
thanks	.
chris	anderson	:	i	've	got	a	question	.
ralph	,	it	's	been	quite	widely	reported	that	people	assume	that	mossad	is	the	main	entity	behind	this	.
is	that	your	opinion	?
ralph	langner	:	okay	,	you	really	want	to	hear	that	?
yeah	.	okay	.
my	opinion	is	that	the	mossad	is	involved	,	but	that	the	leading	force	is	not	israel	.
so	the	leading	force	behind	that	is	the	cyber	superpower	.
there	is	only	one	,	and	that	's	the	united	states	--	fortunately	,	fortunately	.
because	otherwise	,	our	problems	would	even	be	bigger	.
ca	:	thank	you	for	scaring	the	living	_UNK_	out	of	us	.	thank	you	,	ralph	.

