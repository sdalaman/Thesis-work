ich	 möcht 	 e 	 	 ihn 	 en 	 	 heut 	 e 	 	zeigen	,	wie	wir	in	zukunft	 ding 	 e 	 	 her 	 stellen 	 	werden	.
ich	 glaub 	 e 	 	,	dass	 unser 	 e 	 	gebäude	und	maschinen	sich	bald	selbst	 zusammen 	 bauen 	 	,	 ver 	 vielfältig 	 en 	 	und	 repar 	 ieren 	 	werden	.
ich	werde	 ihn 	 en 	 	zeigen	,	was	ich	für	die	 heutige 	 n 	 	produktionsmethoden	halte	,	und	 dies 	 e 	 	dann	mit	 einig 	 en 	 	 natürlich 	 en 	 	systemen	 vergleiche 	 n 	 	.
in	der	 gegenwärtig 	 en 	 	fertigungsindustrie	haben	wir	wolkenkratzer	--	zweieinhalb	jahre	[	bauzeit	]	,	 ein 	 e 	 	 halb 	 e 	 	bis	 ein 	 e 	 	million	teile	,	ziemlich	komplex	,	 neu 	 e 	 	und	 aufregend 	 e 	 	technologien	aus	stahl	,	beton	,	glas	.
wir	haben	 aufregend 	 e 	 	maschinen	,	die	 un 	 s 	 	in	den	weltraum	bringen	--	fünf	jahre	[	bauzeit	]	,	zweieinhalb	millionen	teile	.
wenn	man	auf	der	 ander 	 en 	 	seite	 natürlich 	 e 	 	systeme	 betrachte 	 t 	 	,	findet	man	proteine	,	die	zwei	millionen	typen	 besitz 	 en 	 	und	sich	in	zehn	mikrosekunden	falten	können	,	oder	dna	mit	drei	milliarden	basenpaaren	,	die	sich	in	etwa	 ein 	 er 	 	stunde	 kop 	 ieren 	 	lassen	.
da	gibt	es	 al 	 so 	 	 dies 	 e 	 	 ganz 	 e 	 	komplexität	in	 unser 	 en 	 	 natürlich 	 en 	 	systemen	,	 ab 	 er 	 	sie	sind	extrem	effizient	,	viel	 effizient 	 er 	 	 al 	 s 	 	 all 	 es 	 	,	was	wir	 her 	 stellen 	 	können	,	weit	 komplex 	 er 	 	 al 	 s 	 	 all 	 es 	 	,	was	wir	bauen	können	.
sie	sind	viel	 energie 	 effizient 	 er 	 	.
sie	machen	fast	nie	fehler	.
und	sie	sind	langlebig	,	da	sie	sich	selbst	 repar 	 ieren 	 	können	.
es	gibt	bei	 natürlich 	 en 	 	systemen	 al 	 so 	 	viel	 interessant 	 es 	 	zu	entdecken	.
und	wenn	wir	es	schaffen	,	das	in	 unser 	 e 	 	 gebaut 	 e 	 	umgebung	 ein 	 fließen 	 	zu	lassen	,	dann	haben	wir	ein	 aufregend 	 es 	 	potential	für	 neu 	 e 	 	bauweisen	.
und	ich	 glaub 	 e 	 	,	dass	der	schlüssel	in	selbstmontage	 be 	 steht 	 	.
wenn	wir	selbstmontage	in	 unser 	 er 	 	 physisch 	 en 	 	umwelt	nutzen	wollen	,	gibt	es	 mein 	 er 	 	meinung	nach	vier	 zentral 	 e 	 	faktoren	.
der	 er 	 ste 	 	ist	,	das	wir	die	 ganz 	 e 	 	komplexität	der	 ding 	 e 	 	,	die	wir	bauen	wollen	,	 ent 	 schlüsseln 	 	 müss 	 en 	 	--	 al 	 so 	 	 unser 	 e 	 	gebäude	und	maschinen	.
und	wir	 müss 	 en 	 	das	in	 einfach 	 e 	 	sequenzen	 über 	 setzen 	 	--	quasi	die	dna	davon	,	wie	 unser 	 e 	 	gebäude	 funktion 	 ieren 	 	.
dann	 brauch 	 en 	 	wir	_UNK_	teile	,	die	 dies 	 e 	 	sequenz	 heran 	 ziehen 	 	und	 zu 	 m 	 	 zusammen 	 falten 	 	oder	_UNK_	 verwende 	 n 	 	können	.
wir	 brauch 	 en 	 	_UNK_	,	 da 	 mit 	 	 unser 	 e 	 	teile	aus	dem	programm	_UNK_	können	.
und	wir	 brauch 	 en 	 	 ein 	 e 	 	art	redundanz	 zu 	 r 	 	fehlerkorrektur	,	 da 	 mit 	 	auch	wirklich	das	 ent 	 steht 	 	,	was	wir	bauen	wollen	.
ich	 zeig 	 e 	 	 ihn 	 en 	 	 einig 	 e 	 	projekte	,	an	 den 	 en 	 	meine	kollegen	und	ich	am	mit	arbeiten	,	 da 	 mit 	 	selbstmontage	in	zukunft	 re 	 alisiert 	 	werden	kann	.
die	 er 	 sten 	 	 bei 	 den 	 	sind	_UNK_	und	_UNK_	.
 dies 	 e 	 	projekte	sind	 groß 	 angelegt 	 e 	 	,	_UNK_	roboter	--	zweieinhalb	bis	vier	meter	lange	proteine	.
sie	sind	mit	_UNK_	geräten	 aus 	 gestattet 	 	,	sensoren	.
man	 de 	 kodiert 	 	das	,	was	man	 zusammen 	 falten 	 	will	,	in	 ein 	 e 	 	sequenz	von	winkeln	--	 al 	 so 	 	 min 	 us 	 	120	,	 min 	 us 	 	120	,	0	,	0	,	120	,	 min 	 us 	 	120	--	etwas	in	der	art	;	 ein 	 e 	 	sequenz	von	winkeln	,	oder	drehungen	,	und	man	 s 	 endet 	 	 dies 	 e 	 	sequenz	durch	die	kette	.
jede	einheit	greift	ihre	nachricht	auf	--	 al 	 so 	 	 min 	 us 	 	120	--	sie	 rot 	 iert 	 	entsprechend	,	 prüf 	 t 	 	,	ob	sie	 an 	 gekommen 	 	ist	,	und	leitet	sie	an	die	benachbarte	einheit	weiter	.
dies	hier	sind	die	 brillant 	 en 	 	wissenschaftler	,	ingenieure	und	designer	,	die	an	 dies 	 em 	 	projekt	gearbeitet	haben	.
und	ich	denke	,	es	macht	 ein 	 es 	 	wirklich	klar	:	ist	dies	wirklich	 skal 	 ierbar 	 	?
ich	meine	,	 tausend 	 e 	 	von	dollar	,	viele	arbeitsstunden	,	um	 dies 	 en 	 	zweieinhalb	meter	 hohe 	 n 	 	roboter	zu	schaffen	.
können	wir	das	wirklich	_UNK_	?	können	wir	robotik	wirklich	in	 jede 	 s 	 	teil	 ein 	 bett 	 en 	 	?
das	 nächst 	 e 	 	projekt	stellt	das	in	frage	und	 betrachte 	 t 	 	die	 passiv 	 e 	 	natur	oder	den	 passiv 	 en 	 	versuch	,	rekonfiguration	 programm 	 ierbar 	 	zu	machen	.
 ab 	 er 	 	es	geht	 ein 	 en 	 	schritt	weiter	und	 ver 	 sucht 	 	,	 tatsächlich 	 e 	 	berechnungen	möglich	zu	machen	.
es	integriert	im	 grund 	 e 	 	den	 fundamental 	 sten 	 	bestandteil	von	edv	,	das	 digital 	 e 	 	_UNK_	,	direkt	in	die	teile	.
dies	ist	ein	_UNK_	-	gatter	.
man	hat	ein	tetraeder	,	 welch 	 es 	 	das	gatter	 dar 	 stellt 	 	,	das	die	berechnungen	 durch 	 führen 	 	wird	,	und	man	hat	zwei	input	-	tetraeder	.
 ein 	 es 	 	stellt	die	eingabe	des	_UNK_	dar	,	während	man	die	bausteine	 her 	 stellt 	 	.
das	 ander 	 e 	 	stammt	von	dem	 voran 	 gegangen 	 en 	 	bauteil	,	das	 an 	 geordnet 	 	wurde	.
und	dann	liefert	es	 ein 	 en 	 	output	im	 drei 	 dimensionalen 	 	raum	.
das	 be 	 deutet 	 	,	dass	der	benutzer	 ein 	 geben 	 	kann	,	was	die	bauteile	tun	 soll 	 en 	 	.
es	führt	berechnungen	durch	auf	grundlage	dessen	,	was	es	vorher	getan	hat	,	und	was	der	benutzer	von	ihm	verlangt	.
und	 n 	 un 	 	 beginn 	 t 	 	es	,	sich	im	 drei 	 dimensionalen 	 	raum	zu	bewegen	--	hoch	und	runter	.
auf	der	 linke 	 n 	 	seite	 ent 	 spricht 	 	der	input	[	1,1	]	dem	output	0	,	der	hinunter	geht	.
auf	der	 recht 	 en 	 	seite	 ent 	 spricht 	 	der	input	[	0,0	]	dem	output	1	,	der	hoch	geht	.
was	das	wirklich	 be 	 deutet 	 	,	ist	,	dass	 unser 	 e 	 	strukturen	 n 	 un 	 	die	pläne	dessen	enthalten	,	was	wir	bauen	wollen	.
sie	 besitz 	 en 	 	 al 	 so 	 	sämtliche	informationen	 dar 	 über 	 	,	was	gebaut	 wor 	 den 	 	ist	.
das	 be 	 deutet 	 	,	wir	können	 ein 	 e 	 	form	von	_UNK_	 er 	 reichen 	 	.
in	 dies 	 em 	 	fall	 n 	 en 	 n 	 e 	 	ich	es	_UNK_	replikation	,	weil	die	struktur	die	 genau 	 en 	 	_UNK_	 ent 	 hält 	 	.
tauchen	fehler	auf	,	kann	man	 ein 	 en 	 	teil	 austausch 	 en 	 	.
die	 ganz 	 en 	 	 lokal 	 en 	 	informationen	sind	integriert	,	um	zu	zeigen	,	wie	man	sie	 be 	 heben 	 	kann	.
man	 könnt 	 e 	 	 al 	 so 	 	etwas	haben	,	das	_UNK_	und	_UNK_	und	 ein 	 en 	 	output	von	 ein 	 s 	 	zu	 ein 	 s 	 	liefert	.
es	ist	direkt	integriert	;	es	gibt	keine	anweisungen	von	außen	.
das	 letzt 	 e 	 	projekt	,	was	ich	zeigen	werde	,	nennt	sich	_UNK_	_UNK_	,	und	es	stellt	das	wohl	 aufregend 	 ste 	 	beispiel	_UNK_	systeme	dar	,	das	wir	im	moment	haben	.
es	greift	die	fähigkeit	 zu 	 r 	 	rekonfiguration	und	 zu 	 r 	 	programmierung	auf	und	schafft	ein	komplett	 passiv 	 es 	 	system	.
im	 grund 	 e 	 	hat	man	 ein 	 e 	 	kette	von	elementen	.
 jede 	 s 	 	element	ist	vollkommen	 ident 	 isch 	 	und	sie	sind	_UNK_	.
jede	kette	,	oder	 jede 	 s 	 	element	,	will	sich	nach	rechts	oder	nach	links	drehen	.
während	man	 al 	 so 	 	die	kette	 zusammen 	 setzt 	 	,	 programm 	 iert 	 	man	sie	im	 grund 	 e 	 	.
man	sagt	jeder	einheit	,	ob	sie	sich	nach	rechts	oder	nach	links	drehen	soll	.
wenn	man	die	kette	schüttelt	,	faltet	sie	sich	zusammen	zu	 ein 	 er 	 	konfiguration	,	die	man	 ein 	 programm 	 iert 	 	hat	--	in	 dies 	 em 	 	fall	 ein 	 e 	 	spirale	oder	in	 dies 	 em 	 	fall	zwei	 neben 	 einander 	 	liegende	quadrate	.
man	kann	 al 	 so 	 	im	grund	jede	mögliche	 drei 	 dimensionale 	 	form	--	oder	 ein 	 dimensional 	 	,	 zwei 	 dimensional 	 	--	völlig	passiv	in	 dies 	 e 	 	kette	 ein 	 programm 	 ieren 	 	.
was	sagt	 un 	 s 	 	das	über	die	zukunft	?
ich	denke	,	dass	es	 un 	 s 	 	sagt	,	dass	es	möglichkeiten	der	selbstmontage	,	replikation	und	reparatur	in	 unser 	 en 	 	 physisch 	 en 	 	strukturen	,	 unser 	 en 	 	gebäuden	und	maschinen	gibt	.
es	gibt	 neu 	 e 	 	möglichkeiten	 zu 	 r 	 	programmierung	in	 dies 	 en 	 	teilen	.
und	 dar 	 aus 	 	 ent 	 stehen 	 	 neu 	 e 	 	möglichkeiten	für	die	edv	.
wir	werden	_UNK_	 programm 	 ieren 	 	haben	.
stellen	sie	sich	vor	,	 unser 	 e 	 	gebäude	,	brücken	,	maschinen	,	all	 unser 	 e 	 	bauteile	 könnt 	 en 	 	berechnungen	 durch 	 führen 	 	.
das	würde	 parallel 	 e 	 	und	 verteilt 	 e 	 	rechenleistung	,	 neu 	 e 	 	_UNK_	 bedeute 	 n 	 	.
es	gibt	 al 	 so 	 	ein	 aufregend 	 es 	 	potential	 da 	 für 	 	.
ich	denke	,	dass	 dies 	 e 	 	projekte	,	die	ich	hier	gezeigt	habe	,	 n 	 ur 	 	ein	 winzig 	 er 	 	schritt	in	richtung	 dies 	 er 	 	zukunft	sind	,	wenn	wir	 dies 	 e 	 	 neu 	 en 	 	technologien	für	 ein 	 e 	 	 neu 	 e 	 	,	sich	selbst	 er 	 schaffen 	 de 	 	welt	 implemen 	 tieren 	 	.
 viel 	 en 	 	dank	.

